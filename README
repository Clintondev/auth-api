# üîê API de Autentica√ß√£o

Esta API fornece um sistema de autentica√ß√£o completo utilizando **Spring Boot** e **JWT**, permitindo o gerenciamento seguro de usu√°rios e sess√µes.  

## üõ†Ô∏è Funcionalidades Principais
- Registro e autentica√ß√£o de usu√°rios com **JWT**
- Refresh Token para revalida√ß√£o de sess√£o
- Autentica√ß√£o de Dois Fatores (**2FA**) via Google Authenticator
- Recupera√ß√£o e redefini√ß√£o de senha via e-mail
- Controle de acesso baseado em pap√©is (**RBAC**)
- Prote√ß√£o contra ataques de for√ßa bruta (**Rate Limiting**)

## üèóÔ∏è Tecnologias Utilizadas
- **Java 17**
- **Spring Boot 3.2.2**
- **Spring Security**
- **JWT (JSON Web Token)**
- **PostgreSQL**
- **Spring Data JPA**
- **Google Authenticator**
- **Bucket4j (Rate Limiting)**
- **Swagger/OpenAPI**

## üìÑ Exemplo de `application.properties`
```properties
# Configura√ß√µes do Banco de Dados
spring.datasource.url=jdbc:postgresql://localhost:5432/auth_users
spring.datasource.username=postgres
spring.datasource.password=sua_senha

# Configura√ß√µes do JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Configura√ß√£o da Porta do Servidor
server.port=8080

# Configura√ß√£o de Logs
logging.level.root=INFO
logging.level.com.auth.api=DEBUG
logging.file.name=logs/api-auth.log
logging.file.path=./

# Configura√ß√£o de E-mail (Outlook)
spring.mail.host=smtp.office365.com
spring.mail.port=587
spring.mail.username=seu_email@email.com.br
spring.mail.password=sua_senha
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.from=seu_email@email.com.br

# Configura√ß√£o de E-mail (Gmail - se necess√°rio)
# spring.mail.host=smtp.gmail.com
# spring.mail.port=587
# spring.mail.username=seu_email@gmail.com
# spring.mail.password=
# spring.mail.properties.mail.smtp.auth=true
# spring.mail.properties.mail.smtp.starttls.enable=true


## üìÑ Exemplo de `.env`
```.env
# Variaveis
JWT_SECRET_KEY= 
AES_SECRET_KEY= 

## Run
mvn clean install
mvn spring-boot:run